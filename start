#!/bin/bash

set -e

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

function startDockerMachine {
  if [[ $(docker-machine ls dev -q) -ne "dev" ]]; then
    docker-machine create -d virtualbox dev --virtualbox-disk-size "30000" --virtual-hostonly-cidr "192.168.99.1/24" -virtualbox-memory "2048" || true
  fi
  eval "$(docker-machine env dev)"
}

function setupHostAliases {
  CURRENT_ALIAS=$(grep gitter-dev.local /etc/hosts|sed 's/ .*//')
  DEV_IP=$(docker-machine ip dev)
  if [[ "$CURRENT_ALIAS" != "$DEV_IP" ]]; then
    >&2 echo "Warning. Your current gitter-dev.local ($CURRENT_ALIAS) hostname does not match the docker-machine IP of $DEV_IP"
    read -p "Would you like to update your hostfile? [yN] " -n 1 -r
    echo
    if [[ "$REPLY" =~ ^[Yy]$ ]]; then
      if [[ -z "$CURRENT_ALIAS" ]]; then
        sudo /bin/sh -c "echo \"$DEV_IP gitter-dev.local\" >> /etc/hosts"
      else
        sudo /bin/sh -c "sed -i.bak \"s/.* gitter-dev.local */$DEV_IP gitter-dev.local/\" /etc/hosts"
      fi
    fi

  fi
}

function startDockerServices {
  if [[ -z $(docker-compose ps -q) ]]; then
    docker-compose up -d
  else
    docker-compose start
  fi
}

function setupRedisConfigs {
  DEV_IP=$(docker-machine ip dev)
  mkdir -p "$SCRIPT_DIR/config/redis-docker/"

  cat <<EOD > "$SCRIPT_DIR/config/redis-docker/redis-sentinel.conf"
  sentinel monitor gitter-master-dev $DEV_IP 6379 1
  sentinel down-after-milliseconds gitter-master-dev 5000
  sentinel failover-timeout gitter-master-dev 30000
  sentinel config-epoch gitter-master-dev 3
  # Generated by CONFIG REWRITE
  bind 0.0.0.0
  port 26379
EOD

  cat <<EOD > "$SCRIPT_DIR/config/redis-docker/slave.conf"
  slaveof $DEV_IP 6379
EOD
}

startDockerMachine
setupHostAliases
setupRedisConfigs
startDockerServices

cat << "EOD"
# Run this command to configure your shell:
# eval "$(docker-machine env dev)"
EOD
