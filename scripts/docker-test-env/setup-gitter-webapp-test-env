#!/bin/bash
set -e
set -x

while [[ "$(mongo --quiet --eval 'db.serverStatus().ok') || echo 0" = "0" ]]; do
	echo Waiting for replicaset to come online
	sleep 1
done

if [[ "$(mongo --quiet --eval 'rs.status().ok')" != "1" ]]; then
	echo Replicaset not initialised. Initialising
	mongo <<-DELIM
		rs.initiate({_id: 'troupeSet', members: [
                         {_id: 0, host: 'localhost:27017', priority: 2 },
                         {_id: 1, host: 'localhost:27018', priority: 1 }]
		});
	DELIM

	mongo --eval 'printjson(rs.status())';

	while [[ "$(mongo --quiet --eval 'rs.status().myState')" != "1" ]]; do
		echo Waiting for replicaset to come online
		mongo --eval 'printjson(rs.status())';
		sleep 1
	done
fi

mongo --eval 'printjson(rs.status())';

mongo gitter <<"DELIM"
db.oauthclients.update(
  { clientKey: 'web-internal' },
  { clientKey: 'web-internal',
    clientSecret: 'x',
    name: 'Web Client',
    tag: 'web-app',
  }, true /* upsert */);

db.oauthclients.update(
  { clientKey: '1' },
  {
    clientKey: '1',
    clientSecret: '***REMOVED***',
    name: 'Gitter OSX',
    tag: 'mac',
    registeredRedirectUri: 'https://gitter.im/login/oauth/callback',
    canSkipAuthorization: true
  },
  true /* upsert */);

db.oauthclients.update(
  { clientKey: '2' },
  {
    clientKey: '2',
    clientSecret: '***REMOVED***',
    name: 'Gitter Beta OSX',
    tag: 'mac-beta',
    registeredRedirectUri: 'https://gitter.im/login/oauth/callback',
    canSkipAuthorization: true
  },
  true /* upsert */);

db.oauthclients.update(
  { clientKey: '3' },
  {
    clientKey: '3',
    clientSecret: '***REMOVED***',
    name: 'Troupe Notifier Mac',
    tag: 'mac-notifier',
    registeredRedirectUri: 'https://gitter.im/login/oauth/callback',
    canSkipAuthorization: true
  },
  true /* upsert */);

db.oauthclients.update(
  { clientKey: '4' },
  {
    clientKey: '4',
    clientSecret: '***REMOVED***',
    name: 'Troupe Notifier Mac Beta',
    tag: 'mac-notifier-beta',
    registeredRedirectUri: 'https://gitter.im/login/oauth/callback',
    canSkipAuthorization: true
  },
  true /* upsert */);

db.oauthclients.update(
  { clientKey: '5' },
  {
    clientKey: '5',
    clientSecret: '***REMOVED***',
    name: 'Troupe for Windows Beta',
    tag: 'windows-notifier-beta',
    registeredRedirectUri: 'https://gitter.im/login/oauth/callback',
    canSkipAuthorization: true
  },
  true /* upsert */);


db.oauthclients.update(
  { clientKey: '6' },
  {
    clientKey: '6',
    clientSecret: '***REMOVED***',
    name: 'Troupe for Windows',
    tag: 'windows-notifier',
    registeredRedirectUri: 'https://gitter.im/login/oauth/callback',
    canSkipAuthorization: true
  },
  true /* upsert */);

/* iOS */

db.oauthclients.update(
  { clientKey: 'ios-beta-dev' },
  {
    clientKey: 'ios-beta-dev',
    clientSecret: 'apwX2tugtqTQUWJfQCkxCo6wyR2QxH',
    name: 'Gitter iOS App',
    tag: 'ios-beta-dev',
    registeredRedirectUri: 'https://gitter.im/login/oauth/callback',
    canSkipAuthorization: true
  },
  true /* upsert */);

db.oauthclients.update(
  { clientKey: 'ios-beta' },
  {
    clientKey: 'ios-beta',
    clientSecret: 'Ed6Z39AEbejwhFWtHWLqUetTjCuKqZ',
    name: 'Gitter iOS App',
    tag: 'ios-beta',
    registeredRedirectUri: 'https://gitter.im/login/oauth/callback',
    canSkipAuthorization: true
  },
  true /* upsert */);

db.oauthclients.update(
  { clientKey: 'ios-prod-dev' },
  {
    clientKey: 'ios-prod-dev',
    clientSecret: 'Yij3WvxYxwrtTT8ExpcmVNyPcCA7ak',
    name: 'Gitter iOS App',
    tag: 'ios-prod-dev',
    registeredRedirectUri: 'https://gitter.im/login/oauth/callback',
    canSkipAuthorization: true
  },
  true /* upsert */);

db.oauthclients.update(
  { clientKey: 'ios-prod' },
  {
    clientKey: 'ios-prod',
    clientSecret: 'cLCHTbhhMoWMfjbfYWo7qXitnDxU26',
    name: 'Gitter iOS App',
    tag: 'ios-prod',
    registeredRedirectUri: 'https://gitter.im/login/oauth/callback',
    canSkipAuthorization: true
  },
  true /* upsert */);

/* Android */

db.oauthclients.update(
  { clientKey: 'android-prod' },
  {
    clientKey: 'android-prod',
    clientSecret: 'hUxUi.gWjTMhRRkgPgsAtAG3kdemhc',
    name: 'Gitter Android App',
    tag: 'android-prod',
    registeredRedirectUri: 'https://gitter.im/login/oauth/callback',
    canSkipAuthorization: true
  },
  true /* upsert */);

/* Windows */

db.oauthclients.update(
  { clientKey: 'windows-desktop-prod' },
  {
    clientKey: 'windows-desktop-prod',
    clientSecret: 'tuntErrtEbq*Uo4csWEmZCLcQGNdjv',
    name: 'Gitter Windows Desktop App',
    tag: 'windows-desktop',
    registeredRedirectUri: 'app://gitter/oauth.html'
  },
  true /* upsert */);

/* Linux 32 & 64 */
db.oauthclients.update(
  { clientKey: 'linux-desktop-prod' },
  {
    clientKey: 'linux-desktop-prod',
    clientSecret: 'zL28)CC4NyfB)u{v8je*gMRuTDfYTF',
    name: 'Gitter Linux Desktop App',
    tag: 'linux-desktop',
    registeredRedirectUri: 'app://gitter/oauth.html'
  },
  true /* upsert */);

/* irc.gitter.im */

db.oauthclients.update(
  { clientKey: 'irc-dev' },
  {
    clientKey: 'irc-dev',
    clientSecret: 'd76bbee4-b67a-4886-a76d-0f7c9c3fdaa6',
    name: 'IRC Bridge',
    tag: 'irc-dev',
    registeredRedirectUri: 'http://localhost:3000/login/callback',
    canSkipAuthorization: true
  },
  true /* upsert */);

db.oauthclients.update(
  { clientKey: 'irc-beta' },
  {
    clientKey: 'irc-beta',
    clientSecret: 'fa234b8d-09d6-4bc6-9efe-f88de793bc75',
    name: 'IRC Bridge',
    tag: 'irc-beta',
    registeredRedirectUri: 'https://irc-beta.gitter.im/login/callback',
    canSkipAuthorization: true
  },
  true /* upsert */);

db.oauthclients.update(
  { clientKey: 'irc-prod' },
  {
    clientKey: 'irc-prod',
    clientSecret: '27305551-0382-4a8d-a890-61930bb6da67',
    name: 'IRC Bridge',
    tag: 'irc-prod',
    registeredRedirectUri: 'https://irc.gitter.im/login/callback',
    canSkipAuthorization: true
  },
  true /* upsert */);

/* developer.gitter.im  */

db.oauthclients.update(
  { clientKey: 'developer-dev' },
  {
    clientKey: 'developer-dev',
    clientSecret: '5b1bcd31-9a5d-4332-be13-0f1c9227029b',
    name: 'Gitter Developer Program',
    tag: 'developer-dev',
    registeredRedirectUri: 'http://localhost:4001/login/callback',
    canSkipAuthorization: true
  },
  true /* upsert */);

db.oauthclients.update(
  { clientKey: 'developer-beta' },
  {
    clientKey: 'developer-beta',
    clientSecret: '2d26213e-3981-45c8-9026-c0a3ad1ff9b7',
    name: 'Gitter Developer Program',
    tag: 'developer-beta',
    registeredRedirectUri: 'https://developer-beta.gitter.im/login/callback',
    canSkipAuthorization: true
  },
  true /* upsert */);

db.oauthclients.update(
  { clientKey: 'developer-prod' },
  {
    clientKey: 'developer-prod',
    clientSecret: 'a59f78fd-60d0-4552-b8d3-d2b46e3ef1d4',
    name: 'Gitter Developer Program',
    tag: 'developer-prod',
    registeredRedirectUri: 'https://developer.gitter.im/login/callback',
    canSkipAuthorization: true
  },
  true /* upsert */);

db.oauthclients.update(
  { clientKey: 'billing-dev' },
  {
    clientKey: 'billing-dev',
    clientSecret: 'nVVZxbdBZh99AWTUbgyjHiK',
    name: 'Gitter Billing (Dev)',
    tag: 'billing-dev',
    registeredRedirectUri: 'http://localhost:5500/login/callback',
    canSkipAuthorization: true
  },
  true /* upsert */);

db.oauthclients.update(
  { clientKey: 'billing-beta' },
  {
    clientKey: 'billing-beta',
    clientSecret: 'yRAvzGTtBz3oHkWfNzHFkV4',
    name: 'Gitter Billing (Beta)',
    tag: 'developer-beta',
    registeredRedirectUri: 'https://billing-beta.gitter.im/login/callback',
    canSkipAuthorization: true
  },
  true /* upsert */);

db.oauthclients.update(
  { clientKey: 'billing-prod' },
  {
    clientKey: 'billing-prod',
    clientSecret: 'p3M6VLMJbcVDfLjdbYyLqwi',
    name: 'Gitter Billing',
    tag: 'billing-prod',
    registeredRedirectUri: 'https://billing.gitter.im/login/callback',
    canSkipAuthorization: true
  },
  true /* upsert */);

DELIM

function setupHostAlias {
	HOSTNAME=$1
	IP=$2
	CURRENT_ALIAS=$(grep " $HOSTNAME *$" /etc/hosts|sed 's/ .*//')
	if [[ "$CURRENT_ALIAS" != "$IP" ]]; then
		TMP_HOSTS_FILE="/tmp/hosts.start.$RANDOM"
		/bin/sh -c "
			grep -v \" $HOSTNAME *$\" /etc/hosts > \"$TMP_HOSTS_FILE\" &&
			echo \"$IP $HOSTNAME\" >> \"$TMP_HOSTS_FILE\" &&
			cat \"$TMP_HOSTS_FILE\" > /etc/hosts &&
			rm -f \"$TMP_HOSTS_FILE\"
		"
	fi
}

setupHostAlias gitter-mongo-dev 127.0.0.1
setupHostAlias gitter-redis-dev 127.0.0.1
