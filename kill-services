#!/bin/bash

# This may be set for node debug, but those
# values will break python scripts
export DEBUG=

set -euo pipefail

DOCKER_MACHINE_NAME=${DOCKER_MACHINE_NAME-default}


function has_docker_for_mac {
  if [[ "$OSTYPE" == "linux-gnu" ]]; then
    return 1
  fi

  # Is Docker for Mac running?
  if (pgrep -f /Applications/Docker.app/Contents/MacOS/Docker > /dev/null); then
    return 0
  fi

  return 1
}

if has_docker_for_mac; then
  echo "The docker-compose setup is not compatible with Docker for Mac. Please install Docker Toolbox for Mac: https://docs.docker.com/toolbox/toolbox_install_mac/"
  exit 1
fi

function has_local_docker_install {
  if [[ "$OSTYPE" == "linux-gnu" ]]; then
    return 0
  fi

  # Is Docker for Mac running?
  if (pgrep -f /Applications/Docker.app/Contents/MacOS/Docker > /dev/null); then
    return 0
  fi

  return 1
}

get_local_ip() {
    local _ip _line
    while IFS=$': \t' read -a _line ;do
        [ -z "${_line%inet}" ] &&
           _ip=${_line[${#_line[1]}>4?1:2]} &&
           [ "${_ip#127.0.0.1}" ] && echo $_ip && return 0
      done< <(LANG=C /sbin/ifconfig)
}

function get_ip {
  if has_local_docker_install; then
    get_local_ip
  else
    echo "$(docker-machine ip $DOCKER_MACHINE_NAME)"
  fi
}

function docker_machine_query {
  docker-machine ls -q --filter name=$DOCKER_MACHINE_NAME "$@"|grep -q "^${DOCKER_MACHINE_NAME}$"
}

function stopDockerMachine {
  if docker_machine_query --filter state=Error; then
    echo "-- Docker machine [$DOCKER_MACHINE_NAME] is in an error state. Deleting."
    docker-machine rm -f "$DOCKER_MACHINE_NAME"
  fi

  if docker_machine_query; then
    ## Start the box if it's stopped
    if ! docker_machine_query --filter state=Stopped; then
      echo "-- Stopping docker machine $DOCKER_MACHINE_NAME."
      docker-machine stop $DOCKER_MACHINE_NAME
    fi
  fi

}

function stopDockerServices {
  echo "-- Stop services using docker-compose"
  docker-compose stop
  docker-compose rm -f
}


if ! has_local_docker_install; then
  eval "$(docker-machine env $DOCKER_MACHINE_NAME)"
fi

DOCKER_HOST_IP="$(get_ip)"
export DOCKER_HOST_IP

WORKSPACE="$(pwd)"
export WORKSPACE

stopDockerServices

if ! has_local_docker_install; then
  stopDockerMachine
fi
