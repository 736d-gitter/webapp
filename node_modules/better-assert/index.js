/**
 * Module dependencies.
 */

var AssertionError = require('assert').AssertionError;
var callsite = require('callsite');
var fs = require('fs');

/**
 * Expose `assert`.
 */

module.exports = process.env.NO_ASSERT ? function(){} : assert;

/**
 * Assert the given `expr`.
 */

function assert(expr, level) {
  if (expr) return;

  level = level || 1;
  var stack = callsite();
  var call = stack[level];
  var file = call.getFileName();
  var lineno = call.getLineNumber();
  var src = fs.readFileSync(file, 'utf8');
  var line = src.split('\n')[lineno-1];
  // src = line.match(/assert\((.*)\)/)[1];

  var err = new AssertionError({
    message: line,
    stackStartFunction: stack[level - 1].fun
  });

  throw err;
}

assert.equal = function assertEqual(a, b) {
  if (a !== b) {
    log("Assertion error, values should be equal: ", a, b);
  }

  assert(a === b, 2);
};

assert.notEqual = function assertNotEqual(a, b) {
  if (a === b) {
    log("Assertion error, values should not be equal: ", a, b);
  }

  assert(a !== b, 2);
};

function log(msg, a, b) {
  console.log(msg);
  console.dir(a);
  console.dir(b);
}