stages:
  - docker_images
  - build_unit_test
  - deploy

.job_template: &node_job
  image: registry.gitlab.com/gitlab-org/gitter/webapp
  before_script:
    - npm config set prefer-offline true
    - npm config set cache /npm_cache
    - mv /app/node_modules ./node_modules
    - npm install
    # Do this until we've solved the bug in
    # shrinkwrap process
    # this means that this fork is not production ready quite yet
    - npm shrinkwrap

validate:
  <<: *node_job
  stage: build_unit_test
  script:
    - make validate

test:
  <<: *node_job
  variables:
    BLUEBIRD_DEBUG: 1
  stage: build_unit_test
  services:
    - registry.gitlab.com/gitlab-org/gitter/webapp/mongo:latest
    - registry.gitlab.com/gitlab-org/gitter/webapp/elasticsearch:latest
    - redis:3.0
  script:
    - make ci-test

package:
  <<: *node_job
  stage: build_unit_test
  script:
    - make package
    - ls -la output/
  artifacts:
    paths:
    - output/*,
    - output/app/ASSET_TAG,
    - output/app/GIT_COMMIT,
    - output/app/VERSION
    expire_in: 1 week

containerize:
  stage: deploy
  variables:
    DOCKER_DRIVER: overlay
  image: docker:latest
  dependencies:
    - package
  services:
  - docker:dind
  script:
    - ls -la output
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker build -t registry.gitlab.com/gitlab-org/gitter/webapp/app:$CI_COMMIT_REF_SLUG -f Dockerfile-app-base .
    - docker push registry.gitlab.com/gitlab-org/gitter/webapp/app:$CI_COMMIT_REF_SLUG
  allow_failure: true

# upload-staging:
#   stage: deploy
#   image: python:latest
#   dependencies:
#   - package
#   script:
#   - pip install awscli
#   - aws s3 cp output/app s3://gitter-deployments/gitter-webapp/beta
#   - aws s3 cp output/*
#   only:
#   - develop

deploy-build-image:
  variables:
    DOCKER_DRIVER: overlay
  stage: docker_images
  only:
  - schedules
  image: docker:latest
  services:
  - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker build -t registry.gitlab.com/gitlab-org/gitter/webapp/deploy-build-image:latest scripts/docker/deploy-build-image/
    - docker push registry.gitlab.com/gitlab-org/gitter/webapp/deploy-build-image:latest

deploy_beta:
  stage: deploy
  script:
    - echo "Deploy to beta server"
  environment:
    name: beta
    url: https://beta.gitter.im
  only:
  - develop

deploy_beta_staging:
  stage: deploy
  script:
    - echo "Deploy to beta staging server"
  environment:
    name: beta
    url: https://beta.gitter.im
  only:
  - /^feature\/.*$/

docker-base:
  variables:
    DOCKER_DRIVER: overlay
  stage: docker_images
  only:
  - schedules
  image: docker:latest
  services:
  - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker build -t registry.gitlab.com/gitlab-org/gitter/webapp:latest .
    - docker push registry.gitlab.com/gitlab-org/gitter/webapp:latest

mongo-base:
  variables:
    DOCKER_DRIVER: overlay
  stage: docker_images
  only:
  - schedules
  image: docker:latest
  services:
  - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker build -t registry.gitlab.com/gitlab-org/gitter/webapp/mongo:latest scripts/docker/mongo-image/
    - docker push registry.gitlab.com/gitlab-org/gitter/webapp/mongo:latest

elasticsearch-base:
  variables:
    DOCKER_DRIVER: overlay
  stage: docker_images
  only:
  - schedules
  image: docker:latest
  services:
  - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker build -t registry.gitlab.com/gitlab-org/gitter/webapp/elasticsearch:latest scripts/docker/elasticsearch-image/
    - docker push registry.gitlab.com/gitlab-org/gitter/webapp/elasticsearch:latest
